name: Train and Upload Model

on:
  workflow_dispatch:
    inputs:
      csv_path:
        description: 'Path to the CSV training file (e.g., data/iris.csv)'
        required: true
        default: 'data/iris.csv'
      schema_path:
        description: 'Path to the model schema JSON (e.g., data/schema.json)'
        required: true
        default: 'model/iris/schema.json'
      model_id:
        description: 'Model ID to organize files in MinIO (e.g., iris)'
        required: true
        default: 'iris'

jobs:
  train:
    runs-on: ubuntu-latest

    services:
      minio:
        image: quay.io/minio/minio
        env:
          MINIO_ROOT_USER: admin
          MINIO_ROOT_PASSWORD: admin123
        ports:
          - 9000:9000
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        run: |
          server /data --console-address ":9001"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build training JAR
        run: mvn clean package -DskipTests

      - name: Build Docker image for training
        run: docker build -t ml-trainer -f Dockerfile.trainer .

      - name: Train model and upload to MinIO
        run: |
          docker run --rm \
            -e MINIO_ENDPOINT=http://host.docker.internal:9000 \
            -e MINIO_ACCESS_KEY=admin \
            -e MINIO_SECRET_KEY=admin123 \
            -e BUCKET_NAME=model \
            ml-trainer "${{ github.event.inputs.csv_path }}" "${{ github.event.inputs.schema_path }}" "${{ github.event.inputs.model_id }}"
