services:

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - mlnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  minio-client:
    image: minio/mc
    container_name: minio-client
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 10 &&
      mc alias set local http://minio:9000 admin admin123 &&
      mc mb -p local/model || true &&
      mc policy set public local/model || true
      "
    networks:
      - mlnet
  ml-trainer:
    build:
      context: .
      dockerfile: Dockerfile.trainer
    container_name: ml-trainer
    depends_on:
      - minio-client
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin123
      BUCKET_NAME: model
    networks:
      - mlnet
    command: ["java", "-jar", "mini-ml-platform-1.0.0-jar-with-dependencies.jar", "data/iris.csv"]

  ml-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: ml-api
    depends_on:
      - ml-trainer
      - minio
      - minio-client
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin123
      BUCKET_NAME: model
    ports:
      - "8080:8080"
    networks:
      - mlnet

volumes:
  minio_data:

networks:
  mlnet:    